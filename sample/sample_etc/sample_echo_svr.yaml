atapp:
  # =========== bus configure ===========
  id: 0x00000001 # bus id
  id_mask: 8.8.8.8 # if set, we can convert 0.0.0.1 to 0x00000001
  name: "sample_echo_svr-1" # name with id
  type_id: 1 # server type id
  type_name: "sample_echo_svr" # server type name

  hostname: # hostname, any host should has a unique name. if empty, use the hostname of system network
  # remove_pidfile_after_exit: false
  bus:
    listen: "ipv6://:::21437" # tcp channel
    subnets: "0/16" # children mask(at most 2^16 children )
    proxy: "" # atproxy has no parent node
    loop_times: 1000 # max message number in one loop
    ttl: 16 # max ttl when transfer messages
    backlog: 256 # tcp backlog
    access_token_max_number: 5 # max number of access tokens
    # access_tokens:           # access tokens
    overwrite_listen_path: false # do not overwrite listen path
    first_idle_timeout: 30s # first idle timeout when have new connection(second)
    ping_interval: 60s # ping interval(second)
    retry_interval: 3s # retry interval when error happen(second)
    fault_tolerant: 3 # how many errors will lead to kill connection
    msg_size: 262144 # max message size(256KB)
    recv_buffer_size: 8388608 # recv channel size(8MB), will be used to initialize (shared) memory channel size
    send_buffer_size: 2097152 # send buffer size, will be used to initialize io_stream channel write queue
    send_buffer_number: 0 # send message number limit, will be used to initialize io_stream channel write queue, 0 for dynamic buffer
    gateways:
    #   - address: "ipv6://:::21437"
    #     match_namespaces:
    #       -
    #     match_labels: {}
    #     match_hosts:
    #       -
  # =========== timer ===========
  timer:
    tick_interval: 32ms # 32ms for tick active
    stop_timeout: 10s # 10s for stop operation
    stop_interval: 256ms
  # =========== etcd service for discovery ===========
  etcd:
    enable: false
    hosts:
      - http://127.0.0.1:2375
    path: /atapp/services/astf4g/
    authorization: "" # etcd authorization: username:password
    # http:
    #   debug: false
    #   user_agent: ""
    #   proxy
    #   no_proxy
    #   proxy_user_name
    #   proxy_password
    ssl:
      enable_alpn: true
      verify_peer: false
      ssl_min_version: TLSv1.2
      # ssl_client_cert:       # CURLOPT_SSLCERT
      # ssl_client_cert_type:  # CURLOPT_SSLCERTTYPE: PEM or DER
      # ssl_client_key:        # CURLOPT_SSLKEY
      # ssl_client_key_type:   # CURLOPT_SSLKEYTYPE: PEM, DER or ENG
      # ssl_client_key_passwd: # CURLOPT_KEYPASSWD or CURLOPT_SSLCERTPASSWD
      # ssl_ca_cert:           # CURLOPT_CAINFO
      # ssl_proxy_cert:        # CURLOPT_PROXY_SSLCERT
      # ssl_proxy_cert_type:   # CURLOPT_PROXY_SSLCERTTYPE: PEM or DER
      # ssl_proxy_key:         # CURLOPT_PROXY_SSLKEY
      # ssl_proxy_key_type:    # CURLOPT_PROXY_SSLKEYTYPE: PEM, DER or ENG
      # ssl_proxy_key_passwd:  # CURLOPT_PROXY_KEYPASSWD or CURLOPT_PROXY_SSLCERTPASSWD
      # ssl_proxy_ca_cert:     # CURLOPT_PROXY_CAINFO
      # ssl_cipher_list:       # CURLOPT_SSL_CIPHER_LIST
      # ssl_cipher_list_tls13  # CURLOPT_TLS13_CIPHERS
    cluster:
      auto_update: true # set false when etcd service is behind a safe cluster(Kubernetes etc.)
      update_interval: 5m # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
      retry_interval: 1m # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
    keepalive:
      timeout: 31s # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
      ttl: 10s # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
    request:
      timeout: 15s # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
    init:
      timeout: 5s # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
      tick_interval: 256ms # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
    watcher:
      retry_interval: 15s # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
      request_timeout: 30m # unit: ms/milliseconds, s(econd), m(inute), h(our), d(ay)
      by_id: false
      by_name: true
      # by_type_id: []
      # by_type_name: []
      # by_tag: []
    report_alive:
      by_id: true
      by_type: true
      by_name: true
      by_tag: []

  # =========== external configure files ===========
  # config:
  #   external:
  #     - conf: 'sample_echo_svr.conf'
  # =========== upper configures can not be reload ===========
  # =========== log configure ===========
  log:
    level: debug
    category:
      - name: default
        prefix: "[Log %L][%F %T.%f][%s:%n(%C)]: " # log categorize 0's name = default
        stacktrace:
          min: error
          max: fatal
        sink:
          - type: file
            level:
              min: fatal
              max: warning
            rotate:
              number: 10
              size: 10485760 # 10MB
            file: "../log/sample_echo_svr.error.%N.log"
            writing_alias: "../log/sample_echo_svr.error.log"
            auto_flush: info
            flush_interval: 1m # 60s (unit: s,m,h,d)
          - type: file
            level:
              min: fatal
              max: debug
            rotate:
              number: 10
              size: 10485760 # 10MB
            file: "../log/sample_echo_svr.all.%N.log"
            writing_alias: "../log/sample_echo_svr.all.log"
            auto_flush: info
            flush_interval: 1m # 60s (unit: s,m,h,d)
          - type: stderr # default error log for stderr
            level:
              min: fatal
              max: debug
          - type: stdout # default normal log for stdout
            level:
              min: fatal
              max: debug

      - name: db
        prefix: "[Log %L][%F %T.%f]: " # log categorize 1's name = db
        stacktrace:
          min: disable
          max: disable
